{"version":3,"sources":["Components/AddEventModal.jsx","Components/Calendar.jsx","App.js","index.js"],"names":["isOpen","onClose","onEventAdded","useState","title","setTitle","Date","start","setStart","end","setEnd","onRequestClose","onSubmit","event","preventDefault","placeholder","value","onChange","e","target","date","modalOpen","setModalOpen","events","setEvents","calendarRef","useRef","data","a","axios","post","get","moment","toISOString","response","onClick","style","position","zIndex","ref","plugins","dayGridPlugin","initialView","eventAdd","handleEventAdd","datesSet","handleDatesSet","AddEventModal","current","getApi","addEvent","toDate","Modal","setAppElement","App","Calendar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAMe,cAA4C,IAAjCA,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aACvC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAIG,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBL,mBAAS,IAAIG,MAAnC,mBAAOG,EAAP,KAAYC,EAAZ,KAaA,OACI,cAAC,IAAD,CAAOV,OAAQA,EAAQW,eAAgBV,EAAvC,SACI,uBAAMW,SAbG,SAACC,GACdA,EAAMC,iBAENZ,EAAa,CACTE,QACAG,QACAE,QAEJR,KAKI,UACI,uBAAOc,YAAY,QAAQC,MAAOZ,EAAOa,SAAU,SAAAC,GAAC,OAAIb,EAASa,EAAEC,OAAOH,UAC1E,gCACI,+CACA,cAAC,IAAD,CAAUA,MAAOT,EAAOU,SAAU,SAAAG,GAAI,OAAIZ,EAASY,SAGvD,gCACI,6CACA,cAAC,IAAD,CAAUJ,MAAOP,EAAKQ,SAAU,SAAAG,GAAI,OAAIV,EAAOU,SAGnD,qD,iCC5BD,aACX,MAAkCjB,oBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA4BnB,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KACMC,EAAcC,iBAAO,MAHJ,4CAcvB,WAA8BC,GAA9B,SAAAC,EAAA,sEACUC,IAAMC,KAAK,6BAA8BH,EAAKd,OADxD,4CAduB,kEAkBvB,WAA8Bc,GAA9B,eAAAC,EAAA,sEAC2BC,IAAME,IAAI,kCAAkCC,IAAOL,EAAKpB,OAAO0B,cAAc,QAAQD,IAAOL,EAAKlB,KAAKwB,eADjI,OACUC,EADV,OAEQV,EAAUU,EAASP,MAF3B,4CAlBuB,sBAuBvB,OACI,oCACI,wBAAQQ,QAAS,kBAAMb,GAAa,IAApC,uBAEJ,qBAAKc,MAAO,CAACC,SAAU,WAAYC,OAAQ,GAA3C,SACI,cAAC,IAAD,CACAC,IAAKd,EACLF,OAAQA,EACJiB,QAAS,CAAEC,KACXC,YAAY,eACZC,SAAU,SAAA9B,GAAK,OAjCJ,2CAiCQ+B,CAAe/B,IAClCgC,SAAU,SAACzB,GAAD,OAlCC,2CAkCS0B,CAAe1B,QAIvC,cAAC2B,EAAD,CACA/C,OAAQqB,EACRpB,QAAS,kBAAMqB,GAAa,IAC5BpB,aAAc,SAAAW,GAAK,OApCN,SAAAA,GACCY,EAAYuB,QAAQC,SAC1BC,SAAS,CACjB3C,MAAOyB,IAAOnB,EAAMN,OAAO4C,SAC3B1C,IAAKuB,IAAOnB,EAAMJ,KAAK0C,SACvB/C,MAAOS,EAAMT,QA+BUF,CAAaW,UC7ChDuC,IAAMC,cAAc,SAQLC,MANf,WACE,OACE,cAACC,EAAD,KCFJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4efd9f5e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Datetime from 'react-datetime';\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function ({isOpen, onClose, onEventAdded}) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [start, setStart] = useState(new Date());\r\n    const [end, setEnd] = useState(new Date());\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        onEventAdded({\r\n            title,\r\n            start,\r\n            end\r\n        })\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={onClose}>\r\n            <form onSubmit={onSubmit}>\r\n                <input placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n                <div>\r\n                    <label>Start Date</label>\r\n                    <Datetime value={start} onChange={date => setStart(date)} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>End Date</label>\r\n                    <Datetime value={end} onChange={date => setEnd(date)} />\r\n                </div>\r\n\r\n                <button>Add event</button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n};","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useRef, useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\r\nimport AddEventModal from './AddEventModal';\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\n\r\nexport default function () {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([]);\r\n    const calendarRef = useRef(null);\r\n\r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi()\r\n        calendarApi.addEvent({\r\n            start: moment(event.start).toDate(),\r\n            end: moment(event.end).toDate(),\r\n            title: event.title\r\n        });\r\n    };\r\n\r\n    async function handleEventAdd(data) {\r\n        await axios.post(\"/api/calendar/create-event\", data.event);\r\n    }\r\n\r\n    async function handleDatesSet(data) {\r\n        const response = await axios.get(\"/api/calendar/get-events?start=\"+moment(data.start).toISOString()+\"&end=\"+moment(data.end).toISOString())\r\n            setEvents(response.data);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n            \r\n        <div style={{position: \"relative\", zIndex: 0}}>\r\n            <FullCalendar\r\n            ref={calendarRef}\r\n            events={events}\r\n                plugins={[ dayGridPlugin ]}\r\n                initialView=\"dayGridMonth\"\r\n                eventAdd={event => handleEventAdd(event)}\r\n                datesSet={(date) => handleDatesSet(date)}\r\n                />\r\n        </div>\r\n\r\n            <AddEventModal \r\n            isOpen={modalOpen} \r\n            onClose={() => setModalOpen(false)} \r\n            onEventAdded={event => onEventAdded(event)}\r\n            />\r\n        </section>\r\n    );\r\n}","import React from 'react';\nimport Modal from 'react-modal';\nimport Calendar from \"./Components/Calendar\";\n\nModal.setAppElement('#root')\n\nfunction App() {\n  return (\n    <Calendar />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"react-datetime/css/react-datetime.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}