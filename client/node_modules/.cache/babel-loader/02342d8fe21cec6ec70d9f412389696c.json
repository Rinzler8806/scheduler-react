{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\desktop\\\\scheduler-react\\\\client\\\\src\\\\Components\\\\Calendar.jsx\";\nimport React, { createRef } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DemoApp extends React.Component {\n  render() {\n    const calendarRef = /*#__PURE__*/createRef();\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        schedulerLicenseKey: \"CC-Attribution-NonCommercial-NoDerivatives\",\n        plugins: [dayGridPlugin, timeGridPlugin, resourceTimelinePlugin],\n        initialView: \"dayGridMonth\",\n        events: \"https://fullcalendar.io/demo-events.json?start=2021-03-22&end=2021-08-22\",\n        resources: \"https://fullcalendar.io/demo-resources.json?with-nesting&with-colors\",\n        customButtons: {\n          myTimeDayBtn: {\n            text: \"timeDay\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridDay\");\n              }\n            }\n\n          },\n          myTimeWeekBtn: {\n            text: \"timeWeek\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridWeek\");\n              }\n            }\n\n          },\n          myTimeLineDayBtn: {\n            text: \"timeLineDay\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"resourceTimelineDay\");\n              }\n            }\n\n          },\n          myTimeLineWeekBtn: {\n            text: \"timeLineWeek\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"resourceTimelineWeek\");\n              }\n            }\n\n          }\n        },\n        headerToolbar: {\n          left: \"prev,next\",\n          center: \"title\",\n          right: \"today,dayGridDay,dayGridWeek,dayGridMonth,myTimeDayBtn,myTimeWeekBtn,myTimeLineDayBtn,myTimeLineWeekBtn\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/shane/desktop/scheduler-react/client/src/Components/Calendar.jsx"],"names":["React","createRef","FullCalendar","dayGridPlugin","timeGridPlugin","resourceTimelinePlugin","DemoApp","Component","render","calendarRef","myTimeDayBtn","text","click","calendar","current","calendarApi","getApi","changeView","myTimeWeekBtn","myTimeLineDayBtn","myTimeLineWeekBtn","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAAgD;;AAChD,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;;AAEA,eAAe,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAC/CC,EAAAA,MAAM,GAAG;AAEP,UAAMC,WAAW,gBAAGR,SAAS,EAA7B;AAEA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEM,QAAC,YAAD;AACV,QAAA,GAAG,EAAEQ,WADK;AAEV,QAAA,mBAAmB,EAAC,4CAFV;AAGR,QAAA,OAAO,EAAE,CAAEN,aAAF,EAAiBC,cAAjB,EAAiCC,sBAAjC,CAHD;AAIR,QAAA,WAAW,EAAC,cAJJ;AAKR,QAAA,MAAM,EAAC,0EALC;AAMR,QAAA,SAAS,EAAC,sEANF;AAOR,QAAA,aAAa,EAAE;AACbK,UAAAA,YAAY,EAAE;AACZC,YAAAA,IAAI,EAAE,SADM;;AAEZC,YAAAA,KAAK,GAAG;AAEN,oBAAMC,QAAQ,GAAGJ,WAAW,CAACK,OAA7B;;AAEA,kBAAID,QAAJ,EAAc;AACZ,sBAAME,WAAW,GAAGF,QAAQ,CAACG,MAAT,EAApB;AAEAD,gBAAAA,WAAW,CAACE,UAAZ,CAAuB,aAAvB;AACD;AACF;;AAXW,WADD;AAcbC,UAAAA,aAAa,EAAE;AACbP,YAAAA,IAAI,EAAE,UADO;;AAEbC,YAAAA,KAAK,GAAG;AAEN,oBAAMC,QAAQ,GAAGJ,WAAW,CAACK,OAA7B;;AAEA,kBAAID,QAAJ,EAAc;AACZ,sBAAME,WAAW,GAAGF,QAAQ,CAACG,MAAT,EAApB;AAEAD,gBAAAA,WAAW,CAACE,UAAZ,CAAuB,cAAvB;AACD;AACF;;AAXY,WAdF;AA2BbE,UAAAA,gBAAgB,EAAE;AAChBR,YAAAA,IAAI,EAAE,aADU;;AAEhBC,YAAAA,KAAK,GAAG;AAEN,oBAAMC,QAAQ,GAAGJ,WAAW,CAACK,OAA7B;;AAEA,kBAAID,QAAJ,EAAc;AACZ,sBAAME,WAAW,GAAGF,QAAQ,CAACG,MAAT,EAApB;AAEAD,gBAAAA,WAAW,CAACE,UAAZ,CAAuB,qBAAvB;AACD;AACF;;AAXe,WA3BL;AAwCbG,UAAAA,iBAAiB,EAAE;AACjBT,YAAAA,IAAI,EAAE,cADW;;AAEjBC,YAAAA,KAAK,GAAG;AAEN,oBAAMC,QAAQ,GAAGJ,WAAW,CAACK,OAA7B;;AAEA,kBAAID,QAAJ,EAAc;AACZ,sBAAME,WAAW,GAAGF,QAAQ,CAACG,MAAT,EAApB;AAEAD,gBAAAA,WAAW,CAACE,UAAZ,CAAuB,sBAAvB;AACD;AACF;;AAXgB;AAxCN,SAPP;AA6DR,QAAA,aAAa,EAAE;AACbI,UAAAA,IAAI,EAAE,WADO;AAEbC,UAAAA,MAAM,EAAE,OAFK;AAGbC,UAAAA,KAAK,EAAE;AAHM;AA7DP;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwEP;;AA7EoD","sourcesContent":["import React, { createRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\r\n\r\nexport default class DemoApp extends React.Component {\r\n      render() {\r\n    \r\n        const calendarRef = createRef()\r\n    \r\n        return (\r\n          <section>\r\n            <button>Add Event</button>\r\n                <FullCalendar\r\n      ref={calendarRef}\r\n      schedulerLicenseKey='CC-Attribution-NonCommercial-NoDerivatives'\r\n        plugins={[ dayGridPlugin, timeGridPlugin, resourceTimelinePlugin ]}\r\n        initialView=\"dayGridMonth\"\r\n        events=\"https://fullcalendar.io/demo-events.json?start=2021-03-22&end=2021-08-22\"\r\n        resources=\"https://fullcalendar.io/demo-resources.json?with-nesting&with-colors\"\r\n        customButtons={{\r\n          myTimeDayBtn: {\r\n            text: \"timeDay\",\r\n            click() {\r\n              \r\n              const calendar = calendarRef.current;\r\n\r\n              if (calendar) {\r\n                const calendarApi = calendar.getApi();\r\n\r\n                calendarApi.changeView(\"timeGridDay\");\r\n              }\r\n            },\r\n          },\r\n          myTimeWeekBtn: {\r\n            text: \"timeWeek\",\r\n            click() {\r\n\r\n              const calendar = calendarRef.current;\r\n\r\n              if (calendar) {\r\n                const calendarApi = calendar.getApi();\r\n\r\n                calendarApi.changeView(\"timeGridWeek\");\r\n              }\r\n            }\r\n          },\r\n          myTimeLineDayBtn: {\r\n            text: \"timeLineDay\",\r\n            click() {\r\n              \r\n              const calendar = calendarRef.current;\r\n\r\n              if (calendar) {\r\n                const calendarApi = calendar.getApi();\r\n\r\n                calendarApi.changeView(\"resourceTimelineDay\");\r\n              }\r\n            },\r\n          },\r\n          myTimeLineWeekBtn: {\r\n            text: \"timeLineWeek\",\r\n            click() {\r\n\r\n              const calendar = calendarRef.current;\r\n\r\n              if (calendar) {\r\n                const calendarApi = calendar.getApi();\r\n\r\n                calendarApi.changeView(\"resourceTimelineWeek\");\r\n              }\r\n            }\r\n          },\r\n        }}\r\n        headerToolbar={{\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"today,dayGridDay,dayGridWeek,dayGridMonth,myTimeDayBtn,myTimeWeekBtn,myTimeLineDayBtn,myTimeLineWeekBtn\",\r\n        }}\r\n      />\r\n      </section>\r\n    )\r\n}}"]},"metadata":{},"sourceType":"module"}