{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\desktop\\\\scheduler-react\\\\client\\\\src\\\\Components\\\\Calendar.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useRef, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport AddEventModal from './AddEventModal';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      start: moment(event.start).toDate(),\n      end: moment(event.end).toDate(),\n      title: event.title\n    });\n  };\n\n  async function handleEventAdd(data) {\n    await axios.post(\"/api/calendar/create-event\", data.event);\n  }\n\n  async function handleDatesSet(data) {\n    const response = await axios.get(\"/api/calendar/get-events?start=\" + moment(data.start).toISOString() + \"&end=\" + moment(data.end).toISOString());\n    setEvents(response.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event),\n        datesSet: date => handleDatesSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/shane/desktop/scheduler-react/client/src/Components/Calendar.jsx"],"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","axios","moment","modalOpen","setModalOpen","events","setEvents","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","start","toDate","end","title","handleEventAdd","data","post","handleDatesSet","response","get","toISOString","position","zIndex","date"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAAgD;;AAChD,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,YAAY;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMU,WAAW,GAAGX,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMY,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAIC,WAAW,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,MAApB,EAAlB;AACAF,IAAAA,WAAW,CAACG,QAAZ,CAAqB;AACjBC,MAAAA,KAAK,EAAEZ,MAAM,CAACO,KAAK,CAACK,KAAP,CAAN,CAAoBC,MAApB,EADU;AAEjBC,MAAAA,GAAG,EAAEd,MAAM,CAACO,KAAK,CAACO,GAAP,CAAN,CAAkBD,MAAlB,EAFY;AAGjBE,MAAAA,KAAK,EAAER,KAAK,CAACQ;AAHI,KAArB;AAKH,GAPD;;AASA,iBAAeC,cAAf,CAA8BC,IAA9B,EAAoC;AAChC,UAAMlB,KAAK,CAACmB,IAAN,CAAW,4BAAX,EAAyCD,IAAI,CAACV,KAA9C,CAAN;AACH;;AAED,iBAAeY,cAAf,CAA8BF,IAA9B,EAAoC;AAChC,UAAMG,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,oCAAkCrB,MAAM,CAACiB,IAAI,CAACL,KAAN,CAAN,CAAmBU,WAAnB,EAAlC,GAAmE,OAAnE,GAA2EtB,MAAM,CAACiB,IAAI,CAACH,GAAN,CAAN,CAAiBQ,WAAjB,EAArF,CAAvB;AACIlB,IAAAA,SAAS,CAACgB,QAAQ,CAACH,IAAV,CAAT;AACP;;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMf,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGA;AAAK,MAAA,KAAK,EAAE;AAACqB,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA,6BACI,QAAC,YAAD;AACA,QAAA,GAAG,EAAEnB,WADL;AAEA,QAAA,MAAM,EAAEF,MAFR;AAGI,QAAA,OAAO,EAAE,CAAEN,aAAF,CAHb;AAII,QAAA,WAAW,EAAC,cAJhB;AAKI,QAAA,QAAQ,EAAEU,KAAK,IAAIS,cAAc,CAACT,KAAD,CALrC;AAMI,QAAA,QAAQ,EAAGkB,IAAD,IAAUN,cAAc,CAACM,IAAD;AANtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHA,eAcI,QAAC,aAAD;AACA,MAAA,MAAM,EAAExB,SADR;AAEA,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF3B;AAGA,MAAA,YAAY,EAAEK,KAAK,IAAID,YAAY,CAACC,KAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useRef, useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\r\nimport AddEventModal from './AddEventModal';\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\n\r\nexport default function () {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([]);\r\n    const calendarRef = useRef(null);\r\n\r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi()\r\n        calendarApi.addEvent({\r\n            start: moment(event.start).toDate(),\r\n            end: moment(event.end).toDate(),\r\n            title: event.title\r\n        });\r\n    };\r\n\r\n    async function handleEventAdd(data) {\r\n        await axios.post(\"/api/calendar/create-event\", data.event);\r\n    }\r\n\r\n    async function handleDatesSet(data) {\r\n        const response = await axios.get(\"/api/calendar/get-events?start=\"+moment(data.start).toISOString()+\"&end=\"+moment(data.end).toISOString())\r\n            setEvents(response.data);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n            \r\n        <div style={{position: \"relative\", zIndex: 0}}>\r\n            <FullCalendar\r\n            ref={calendarRef}\r\n            events={events}\r\n                plugins={[ dayGridPlugin ]}\r\n                initialView=\"dayGridMonth\"\r\n                eventAdd={event => handleEventAdd(event)}\r\n                datesSet={(date) => handleDatesSet(date)}\r\n                />\r\n        </div>\r\n\r\n            <AddEventModal \r\n            isOpen={modalOpen} \r\n            onClose={() => setModalOpen(false)} \r\n            onEventAdded={event => onEventAdded(event)}\r\n            />\r\n        </section>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}