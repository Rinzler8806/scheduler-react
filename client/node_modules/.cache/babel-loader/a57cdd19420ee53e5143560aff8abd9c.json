{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\desktop\\\\scheduler-react\\\\client\\\\src\\\\App.js\";\n// import React, { createRef } from 'react';\n// import FullCalendar from '@fullcalendar/react'; // must go before plugins\n// import dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n// import timeGridPlugin from '@fullcalendar/timegrid';\n// import resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport React from 'react';\nimport Modal from 'react-modal';\nimport Calendar from \"./Components/Calendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // export default class DemoApp extends React.Component {\n//   render() {\n//     const calendarRef = createRef()\n//     return (\n//       <FullCalendar\n//       ref={calendarRef}\n//       schedulerLicenseKey='CC-Attribution-NonCommercial-NoDerivatives'\n//         plugins={[ dayGridPlugin, timeGridPlugin, resourceTimelinePlugin ]}\n//         initialView=\"dayGridMonth\"\n//         events=\"https://fullcalendar.io/demo-events.json?start=2021-03-22&end=2021-08-22\"\n//         resources=\"https://fullcalendar.io/demo-resources.json?with-nesting&with-colors\"\n//         customButtons={{\n//           myTimeDayBtn: {\n//             text: \"timeDay\",\n//             click() {\n//               const calendar = calendarRef.current;\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n//                 calendarApi.changeView(\"timeGridDay\");\n//               }\n//             },\n//           },\n//           myTimeWeekBtn: {\n//             text: \"timeWeek\",\n//             click() {\n//               const calendar = calendarRef.current;\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n//                 calendarApi.changeView(\"timeGridWeek\");\n//               }\n//             }\n//           },\n//           myTimeLineDayBtn: {\n//             text: \"timeLineDay\",\n//             click() {\n//               const calendar = calendarRef.current;\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n//                 calendarApi.changeView(\"resourceTimelineDay\");\n//               }\n//             },\n//           },\n//           myTimeLineWeekBtn: {\n//             text: \"timeLineWeek\",\n//             click() {\n//               const calendar = calendarRef.current;\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n//                 calendarApi.changeView(\"resourceTimelineWeek\");\n//               }\n//             }\n//           },\n//         }}\n//         headerToolbar={{\n//           left: \"prev,next\",\n//           center: \"title\",\n//           right: \"today,dayGridDay,dayGridWeek,dayGridMonth,myTimeDayBtn,myTimeWeekBtn,myTimeLineDayBtn,myTimeLineWeekBtn\",\n//         }}\n//       />\n//     );\n//   }\n// }\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/shane/desktop/scheduler-react/client/src/App.js"],"names":["React","Modal","Calendar","setAppElement","App"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEAD,KAAK,CAACE,aAAN,CAAoB,OAApB;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAjFSA,G;AAmFT,eAAeA,GAAf","sourcesContent":["// import React, { createRef } from 'react';\n// import FullCalendar from '@fullcalendar/react'; // must go before plugins\n// import dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n// import timeGridPlugin from '@fullcalendar/timegrid';\n// import resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport React from 'react';\nimport Modal from 'react-modal';\nimport Calendar from \"./Components/Calendar\";\n\nModal.setAppElement('#root')\n\nfunction App() {\n  return (\n    <Calendar />\n  );\n}\n\n// export default class DemoApp extends React.Component {\n//   render() {\n\n//     const calendarRef = createRef()\n\n//     return (\n//       <FullCalendar\n//       ref={calendarRef}\n//       schedulerLicenseKey='CC-Attribution-NonCommercial-NoDerivatives'\n//         plugins={[ dayGridPlugin, timeGridPlugin, resourceTimelinePlugin ]}\n//         initialView=\"dayGridMonth\"\n//         events=\"https://fullcalendar.io/demo-events.json?start=2021-03-22&end=2021-08-22\"\n//         resources=\"https://fullcalendar.io/demo-resources.json?with-nesting&with-colors\"\n//         customButtons={{\n//           myTimeDayBtn: {\n//             text: \"timeDay\",\n//             click() {\n              \n//               const calendar = calendarRef.current;\n\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n\n//                 calendarApi.changeView(\"timeGridDay\");\n//               }\n//             },\n//           },\n//           myTimeWeekBtn: {\n//             text: \"timeWeek\",\n//             click() {\n\n//               const calendar = calendarRef.current;\n\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n\n//                 calendarApi.changeView(\"timeGridWeek\");\n//               }\n//             }\n//           },\n//           myTimeLineDayBtn: {\n//             text: \"timeLineDay\",\n//             click() {\n              \n//               const calendar = calendarRef.current;\n\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n\n//                 calendarApi.changeView(\"resourceTimelineDay\");\n//               }\n//             },\n//           },\n//           myTimeLineWeekBtn: {\n//             text: \"timeLineWeek\",\n//             click() {\n\n//               const calendar = calendarRef.current;\n\n//               if (calendar) {\n//                 const calendarApi = calendar.getApi();\n\n//                 calendarApi.changeView(\"resourceTimelineWeek\");\n//               }\n//             }\n//           },\n//         }}\n//         headerToolbar={{\n//           left: \"prev,next\",\n//           center: \"title\",\n//           right: \"today,dayGridDay,dayGridWeek,dayGridMonth,myTimeDayBtn,myTimeWeekBtn,myTimeLineDayBtn,myTimeLineWeekBtn\",\n//         }}\n//       />\n//     );\n//   }\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}